package com.prunny.auth_service.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AuthUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuthUserAllPropertiesEquals(AuthUser expected, AuthUser actual) {
        assertAuthUserAutoGeneratedPropertiesEquals(expected, actual);
        assertAuthUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuthUserAllUpdatablePropertiesEquals(AuthUser expected, AuthUser actual) {
        assertAuthUserUpdatableFieldsEquals(expected, actual);
        assertAuthUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuthUserAutoGeneratedPropertiesEquals(AuthUser expected, AuthUser actual) {
        assertThat(actual)
            .as("Verify AuthUser auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuthUserUpdatableFieldsEquals(AuthUser expected, AuthUser actual) {
        assertThat(actual)
            .as("Verify AuthUser relevant properties")
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getPassword()).as("check password").isEqualTo(expected.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuthUserUpdatableRelationshipsEquals(AuthUser expected, AuthUser actual) {
        // empty method
    }
}
