package com.prunny.task.domain;

import static com.prunny.task.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class TaskAttachmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskAttachmentAllPropertiesEquals(TaskAttachment expected, TaskAttachment actual) {
        assertTaskAttachmentAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskAttachmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskAttachmentAllUpdatablePropertiesEquals(TaskAttachment expected, TaskAttachment actual) {
        assertTaskAttachmentUpdatableFieldsEquals(expected, actual);
        assertTaskAttachmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskAttachmentAutoGeneratedPropertiesEquals(TaskAttachment expected, TaskAttachment actual) {
        assertThat(actual)
            .as("Verify TaskAttachment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskAttachmentUpdatableFieldsEquals(TaskAttachment expected, TaskAttachment actual) {
        assertThat(actual)
            .as("Verify TaskAttachment relevant properties")
            .satisfies(a -> assertThat(a.getFileName()).as("check fileName").isEqualTo(expected.getFileName()))
            .satisfies(a -> assertThat(a.getFileUrl()).as("check fileUrl").isEqualTo(expected.getFileUrl()))
            .satisfies(a -> assertThat(a.getUploadedByUserId()).as("check uploadedByUserId").isEqualTo(expected.getUploadedByUserId()))
            .satisfies(a ->
                assertThat(a.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getCreatedAt())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskAttachmentUpdatableRelationshipsEquals(TaskAttachment expected, TaskAttachment actual) {
        assertThat(actual)
            .as("Verify TaskAttachment relationships")
            .satisfies(a -> assertThat(a.getTask()).as("check task").isEqualTo(expected.getTask()));
    }
}
